---
layout: post
title:  "Python"
---

**1. Enumerate**

```python
x = ('apple', 'banana', 'cherry', 'cherry')
y = enumerate(x)
```

Output:
```
[(0, 'apple'), (1, 'banana'), (2, 'cherry'), (3, 'cherry')]
```

**2. Counter**
- `elements()` 方法：返回一个迭代器，其中包含每个元素重复出现次数的次数。这对于重构原始输入数据非常有用。
- `most_common([n])` 方法：返回一个列表，包含出现次数最多的前 n 个元素及其计数。如果 n 没有指定，则返回所有元素的计数，按计数降序排列。
- 直接支持的数学运算：Counter 对象可以使用加法（+）、减法（-）、交集（&）和并集（|）等运算符进行操作。这些操作可以用于合并、比较或处理计数数据。
- Counter 对象可以访问即使没有明确添加过的键。如果尝试访问 Counter 中不存在的键，它将返回 0 而不是引发 `KeyError`，这是普通字典行为与之不同的地方。这个特性使得使用 Counter 更加方便，因为你不需要检查一个键是否存在于 Counter 中就可以安全地查询它的计数。
